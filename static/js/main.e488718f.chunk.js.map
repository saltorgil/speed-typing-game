{"version":3,"sources":["App.js","index.js"],"names":["App","useState","text","setText","timeRemaining","setTimeRemaining","isRunning","setIsRunning","numWords","setNumWords","refTextarea","useRef","countTextWords","trim","split","filter","word","length","useEffect","setTimeout","prevTime","console","log","className","onChange","event","target","value","disabled","ref","onClick","current","focus","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLA4EeA,MAzEf,WAEE,IAFa,EAGWC,mBAAS,IAHpB,mBAGNC,EAHM,KAGAC,EAHA,OAI6BF,mBAFlB,GAFX,mBAING,EAJM,KAISC,EAJT,OAKqBJ,oBAAS,GAL9B,mBAKNK,EALM,KAKKC,EALL,OAMmBN,mBAAS,GAN5B,mBAMNO,EANM,KAMIC,EANJ,KAQPC,EAAcC,iBAAO,MAMrBC,EAAiB,SAACV,GAAD,OACrBA,EACGW,OACAC,MAAM,KACNC,QAAO,SAAAC,GAAI,MAAS,KAAPA,KACbC,QA8BL,OAfAC,qBAAU,WAEJZ,GAAaF,EAAgB,EAC/Be,YAAW,WACTd,GAAiB,SAAAe,GAAQ,OAAIA,EAAU,OACvC,KAEuB,IAAlBhB,IAXTG,GAAa,GACbE,EAAYG,EAAeV,IAYzBmB,QAAQC,IAAI,sBAGd,CAAClB,EAAeE,IAIhB,yBAAKiB,UAAU,QACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,wBAAd,qBACA,uEACA,8BACEC,SA7Ce,SAACC,GACtBtB,EAAQsB,EAAMC,OAAOC,QA6CfA,MAAOzB,EACP0B,UAAatB,EACbuB,IAAOnB,IAET,+CAAqBN,GACrB,4BAAQmB,UAAU,QAChBO,QAzCU,WAChBvB,GAAa,GACbF,EArBsB,GAsBtBF,EAAQ,IACRO,EAAYqB,QAAQH,UAAW,EAC/BlB,EAAYqB,QAAQC,SAqCdJ,SAAYtB,GAFd,SAMA,wBAAIwB,QAASlB,GAAb,eAA0CJ,MClElDyB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.e488718f.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport \"./app.css\"\n\nfunction App() {\n\n  const START_GAME_TIME = 5\n  const [text, setText] = useState('')\n  const [timeRemaining, setTimeRemaining] = useState(START_GAME_TIME)\n  const [isRunning, setIsRunning] = useState(false)\n  const [numWords, setNumWords] = useState(0)\n\n  const refTextarea = useRef(null);\n\n  const handleTextarea = (event) =>{\n    setText(event.target.value)\n  }\n\n  const countTextWords = (text) => \n    text\n      .trim()\n      .split(' ')\n      .filter(word=>word!=='')\n      .length\n\n  const startGame = () => {\n    setIsRunning(true)\n    setTimeRemaining(START_GAME_TIME)\n    setText('')\n    refTextarea.current.disabled = false\n    refTextarea.current.focus()\n  }\n\n  const endGame = () =>{\n    setIsRunning(false);\n    setNumWords(countTextWords(text));\n  }\n\n  useEffect(()=>{\n\n    if (isRunning && timeRemaining > 0 ){\n      setTimeout(()=>{\n        setTimeRemaining(prevTime => prevTime -1) \n      },1000)\n    }\n    else if (timeRemaining === 0) {\n      endGame();\n      console.log(\"juego terminado\")\n    }\n  // eslint-disable-next-line\n  },[timeRemaining, isRunning])\n\n\n  return(\n    <div className=\"main\">\n      <div className='main-container'>\n        <h1 className='main-container-title'>Speed Typing Game</h1>\n        <h2>How fast do you type in only 5 seconds?</h2>\n        <textarea \n          onChange={handleTextarea} \n          value={text}\n          disabled = {!isRunning}\n          ref = {refTextarea}\n        />\n        <h3>Time remaining: {timeRemaining}</h3>\n        <button className=\"sheen\"\n          onClick={startGame}\n          disabled = {isRunning}\n        >\n            Start\n        </button>\n        <h1 onClick={countTextWords}>Word Count: {numWords}</h1>\n      </div>\n    </div>\n  )\n};\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}