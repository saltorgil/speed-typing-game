{"version":3,"sources":["hooks/useTypingGame.js","App.js","index.js"],"names":["useTypingGame","start_game_time","useState","text","setText","timeRemaining","setTimeRemaining","isRunning","setIsRunning","numWords","setNumWords","allQuotes","setAllQuotes","randomQuote","setRandomQuote","refTextarea","useRef","countTextWords","trim","split","filter","word","length","getRandomQuote","randNum","Math","floor","random","useEffect","document","title","setTimeout","prevTime","console","log","a","fetch","URLSearchParams","maxLength","skip","response","json","data","results","arrayQuotes","map","result","content","author","handleTextarea","event","target","value","startGame","current","disabled","focus","App","className","style","verticalAlign","onChange","ref","onClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"2NAsFeA,MApFf,SAAuBC,GAAiB,IAAD,EAEXC,mBAAS,IAFE,mBAE5BC,EAF4B,KAEtBC,EAFsB,OAGOF,mBAASD,GAHhB,mBAG5BI,EAH4B,KAGbC,EAHa,OAIDJ,oBAAS,GAJR,mBAI5BK,EAJ4B,KAIjBC,EAJiB,OAKHN,mBAAS,GALN,mBAK5BO,EAL4B,KAKlBC,EALkB,OAODR,mBAAS,IAPR,mBAO5BS,EAP4B,KAOjBC,EAPiB,OAQGV,mBAAS,IARZ,mBAQ5BW,EAR4B,KAQfC,EARe,KAW7BC,EAAcC,iBAAO,MAMrBC,EAAiB,SAACd,GAAD,OACrBA,EACGe,OACAC,MAAM,KACNC,QAAO,SAAAC,GAAI,MAAS,KAAPA,KACbC,QAgBCC,EAAiB,WACrB,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWhB,EAAUW,QACrDR,EAAeH,EAAUa,KAyC3B,OAtCAI,qBAAU,WACNC,SAASC,MAAQ,oBAEfvB,GAAaF,EAAgB,EAC/B0B,YAAW,WACTzB,GAAiB,SAAA0B,GAAQ,OAAIA,EAAU,OACvC,KAEuB,IAAlB3B,IAlBTG,GAAa,GACbE,EAAYO,EAAed,IAC3BoB,IAkBEU,QAAQC,IAAI,sBAGd,CAAC7B,EAAeE,IAGlBqB,qBAAU,WAAI,4CAEZ,kCAAAO,EAAA,sEACyBC,MAAM,kCAAoC,IAAIC,gBAAgB,CACjFC,UAAW,GACXC,KAAMd,KAAKC,MAAsB,GAAhBD,KAAKE,aAH5B,cACQa,EADR,gBAMqBA,EAASC,OAN9B,OAMQC,EANR,OAQSC,EAAWD,EAAXC,QACDC,EAAcD,EAAQE,KAAI,SAAAC,GAAM,OAAIA,EAAOC,QAAU,MAAQD,EAAOE,UAC1EpC,EAAagC,GAVf,4CAFY,uBAAC,WAAD,wBAeZ/B,KACA,IAGFe,qBAAU,kBAAIL,MAAkB,CAACZ,IAG1B,CAACR,OAAME,gBAAeE,YAAWM,cAAaJ,WAAUM,cAAakC,eApErD,SAACC,GACtB9C,EAAQ8C,EAAMC,OAAOC,QAmEqEnC,iBAAgBoC,UAzD1F,WAChB7C,GAAa,GACbF,EAAiBL,GACjBG,EAAQ,IACRW,EAAYuC,QAAQC,UAAW,EAC/BxC,EAAYuC,QAAQE,W,MCGXC,MA9Bf,WAAgB,IAAD,EAE2GzD,EAAc,GAA/HG,EAFM,EAENA,KAAME,EAFA,EAEAA,cAAeE,EAFf,EAEeA,UAAWM,EAF1B,EAE0BA,YAAaJ,EAFvC,EAEuCA,SAAUM,EAFjD,EAEiDA,YAAakC,EAF9D,EAE8DA,eAAgBhC,EAF9E,EAE8EA,eAAgBoC,EAF9F,EAE8FA,UAG3G,OACE,yBAAKK,UAAU,QACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,wBAAd,qBACA,uEACA,yCAAc,0BAAMC,MAAO,CAACC,cAAc,WAA5B,WAAuD/C,GACrE,8BACEgD,SAAUZ,EACVG,MAAOjD,EACPoD,UAAahD,EACbuD,IAAO/C,IAET,+CAAqBV,GACrB,4BAAQqD,UAAU,QAChBK,QAASV,EACTE,SAAYhD,GAFd,SAMA,wBAAIwD,QAAS9C,GAAb,eAA0CR,MCxBlDuD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFrC,SAASsC,eAAe,U","file":"static/js/main.21ce95cb.chunk.js","sourcesContent":["import  {useState, useEffect, useRef} from \"react\";\n\nfunction useTypingGame(start_game_time){\n\n    const [text, setText] = useState('')\n    const [timeRemaining, setTimeRemaining] = useState(start_game_time)\n    const [isRunning, setIsRunning] = useState(false)\n    const [numWords, setNumWords] = useState(0)\n\n    const [allQuotes, setAllQuotes] = useState([])\n    const [randomQuote, setRandomQuote] = useState('')\n\n\n    const refTextarea = useRef(null);\n\n    const handleTextarea = (event) =>{\n      setText(event.target.value)\n    }\n  \n    const countTextWords = (text) => \n      text\n        .trim()\n        .split(' ')\n        .filter(word=>word!=='')\n        .length\n  \n    const startGame = () => {\n      setIsRunning(true)\n      setTimeRemaining(start_game_time)\n      setText('')\n      refTextarea.current.disabled = false\n      refTextarea.current.focus()\n    }\n  \n    const endGame = () =>{\n      setIsRunning(false);\n      setNumWords(countTextWords(text));\n      getRandomQuote();\n    }\n\n    const getRandomQuote = () => {\n      const randNum = Math.floor(Math.random() * allQuotes.length)\n      setRandomQuote(allQuotes[randNum])\n    }\n  \n    useEffect(()=>{\n        document.title = \"Speed Typing Game\";\n  \n      if (isRunning && timeRemaining > 0 ){\n        setTimeout(()=>{\n          setTimeRemaining(prevTime => prevTime -1) \n        },1000)\n      }\n      else if (timeRemaining === 0) {\n        endGame();\n        console.log(\"juego terminado\")\n      }\n    // eslint-disable-next-line\n    },[timeRemaining, isRunning])\n\n\n    useEffect(()=>{\n\n      async function randomQuote() {\n        const response = await fetch('https://api.quotable.io/quotes?' + new URLSearchParams({\n            maxLength: 55,\n            skip: Math.floor(Math.random() * 50)\n        }))\n\n        const data = await response.json()\n\n        const {results} = data\n        const arrayQuotes = results.map(result => result.content + \" - \" + result.author)\n        setAllQuotes(arrayQuotes);\n      }\n      \n      randomQuote()\n    },[])\n\n    // eslint-disable-next-line\n    useEffect(()=>getRandomQuote(), [allQuotes])\n\n\n    return {text, timeRemaining, isRunning, randomQuote, numWords, refTextarea, handleTextarea, countTextWords, startGame}\n}\n\nexport default useTypingGame","import React from \"react\";\nimport useTypingGame from \"./hooks/useTypingGame\"\nimport \"./css/app.css\" \n\nfunction App() {\n\n  const {text, timeRemaining, isRunning, randomQuote, numWords, refTextarea, handleTextarea, countTextWords, startGame} = useTypingGame(5)\n\n\n  return(\n    <div className=\"main\">\n      <div className='main-container'>\n        <h1 className='main-container-title'>Speed Typing Game</h1>\n        <h2>How fast do you type in only 5 seconds?</h2>\n        <h4>TRY THIS \t<span style={{verticalAlign:'middle'}}>&#9654; </span>{randomQuote}</h4>\n        <textarea \n          onChange={handleTextarea} \n          value={text}\n          disabled = {!isRunning}\n          ref = {refTextarea}\n        />\n        <h3>Time remaining: {timeRemaining}</h3>\n        <button className=\"sheen\"\n          onClick={startGame}\n          disabled = {isRunning}\n        >\n            Start\n        </button>\n        <h1 onClick={countTextWords}>Word Count: {numWords}</h1>\n      </div>\n    </div>\n  )\n};\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}